#BlueJ class context
comment0.target=Hotel
comment0.text=\r\n\ Clase\ Hotel\ calcula\ el\ costo\ de\ habitaciones\ de\ un\ hotel,\ cuenta\ los\ hoteles\ que\ se\ alquilan\ y\ liquida.\r\n\ \r\n\ @author\ Valenzuela\ Luciano\ Juan\ Ignacio\r\n
comment1.params=p_nombre\ p_precio\ p_diasAlq\ p_tipoHabitacion
comment1.target=Hotel(java.lang.String,\ double,\ int,\ java.lang.String)
comment1.text=\r\n\ Constructor\ sobrecargado\r\n\ @param\ String\ nombre,\ double\ precio,\ int\ diasAlq,\ String\ tipoHabitacion\r\n
comment2.params=p_nombre\ p_precio\ p_diasAlq\ p_servicios\ p_tipoHabitacion
comment2.target=Hotel(java.lang.String,\ double,\ int,\ java.util.ArrayList,\ java.lang.String)
comment2.text=\r\n\ Constructor\r\n\ @param\ String\ nombre,\ double\ precio,\ int\ diasAlq,\ ArrayList\ servicios,\ String\ tipoHabitacion\r\n
comment3.params=p_tipoHabitacion
comment3.target=void\ setHabitacion(java.lang.String)
comment3.text=\r\n\ Setters\r\n
comment4.params=
comment4.target=java.lang.String\ getHabitacion()
comment4.text=\r\n\ Getters\r\n
comment5.params=
comment5.target=double\ costo()
comment5.text=\r\n\ Calcula\ el\ costo\ de\ un\ hotel,\ dependiendo\ si\ el\ tipo\ de\ habitacion\ es\ single\ o\ doble\r\n\ @return\ costo\r\n
comment6.params=p_alojamiento
comment6.target=int\ contar(java.lang.String)
comment6.text=\r\n\ Creamos\ una\ variable\ booleana\ que\ sera\ igual\ al\ nombre\ del\ alojamiento\ en\ minusculas\ y\ mandamos\ un\ mensaje\ al\ metodo\ contains\ y\ le\ pasamos\r\n\ el\ string\ hotel.\ Luego\ hacemos\ una\ verificion,\ si\ contiene\ es\ true\ entonces\ devolvera\ 1\ (Significa\ que\ encontro\ un\ alojamiento\ con\ el\ nombre\r\n\ de\ hotel),\ si\ es\ false\ devolvera\ 0.\r\n\ @param\ String\ alojamiento\r\n\ return\ 1\ o\ 0\r\n
comment7.params=
comment7.target=void\ liquidar()
numComments=8

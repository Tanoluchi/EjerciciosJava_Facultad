#BlueJ class context
comment0.target=Gerencia
comment0.text=\r\n\ Clase\ Gerencia\ agrega\ o\ quita\ alojamientos,\ cuenta\ la\ cantidad\ de\ alojamientos\ alquilados,\ liquida\ cada\ uno\ de\ ellos\ y\ muestra\ por\ pantalla\r\n\ los\ datos\ principales\ de\ la\ gerencia\ y\ de\ los\ alojamientos\ alquilados.\r\n\ \r\n\ @author\ Valenzuela\ Luciano\ Juan\ Ignacio\r\n
comment1.params=p_nombre
comment1.target=Gerencia(java.lang.String)
comment1.text=\r\n\ Constructor\ sobrecargado\r\n\ @param\ String\ nombre\r\n
comment10.params=
comment10.target=void\ liquidar()
comment10.text=\r\n\ Se\ realiza\ un\ foreach\ y\ liquidamos\ todos\ los\ alojamientos\ dentro\ de\ la\ coleccion.\r\n
comment11.params=
comment11.target=void\ mostrarLiquidacion()
comment2.params=p_nombre\ p_alojamientosAlquilados
comment2.target=Gerencia(java.lang.String,\ java.util.ArrayList)
comment2.text=\r\n\ Constructor\r\n\ @param\ String\ nombre,\ ArrayList\ alojamientosAlquilados\r\n
comment3.params=p_nombre
comment3.target=void\ setNombre(java.lang.String)
comment3.text=\r\n\ Setters\r\n
comment4.params=p_alojamientosAlquilados
comment4.target=void\ setAlojamientosAlq(java.util.ArrayList)
comment5.params=
comment5.target=java.lang.String\ getNombre()
comment5.text=\r\n\ Getters\r\n
comment6.params=
comment6.target=java.util.ArrayList\ getAlojamientosAlq()
comment7.params=p_alojamiento
comment7.target=boolean\ agregarAlojamiento(Alojamiento)
comment7.text=\r\n\ Agrega\ un\ alojamiento\ a\ la\ coleccion\r\n\ @param\ Alojamiento\ alojamiento\r\n\ @return\ true\ o\ false\r\n
comment8.params=p_alojamiento
comment8.target=boolean\ quitarAlojamiento(Alojamiento)
comment8.text=\r\n\ Quita\ un\ alojamiento\ de\ la\ coleccion\r\n\ @param\ Alojamiento\ alojamiento\r\n\ @return\ true\ o\ false\r\n
comment9.params=tipoAlojamiento
comment9.target=int\ contarAlojamiento(java.lang.String)
comment9.text=\r\n\ Se\ crea\ una\ variable\ temporal\ que\ servira\ como\ contador,\ luego\ una\ variable\ booleana.\ Se\ realiza\ un\ foreach\ y\ recorremos\ la\ coleccion\r\n\ la\ variable\ booleana\ guardara\ true\ (si\ el\ nombre\ del\ alojamiento\ contiene\ el\ tipo\ de\ alojamiento\ pasado\ por\ parametor),\ si\ no\ guardara\ false.\r\n\ Se\ hace\ una\ verificacion,\ si\ nuestra\ variable\ booleana\ guarda\ un\ true\ entonces\ entra\ al\ if\ y\ el\ contador\ suma\ en\ 1.\r\n\ @param\ String\ tipoAlojamiento\r\n\ @return\ cantidad\ de\ alojamientos\r\n
numComments=12
